name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image (All Targets)
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push_csenv:
    name: Push csenv:latest (csenv)
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          target: csenv
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:latest
          cache-from: type=gha

  push_csenv-for-test-litespeed-general:
    name: Push csenv:test-litespeed-general-latest (csenv-for-test-litespeed-general)
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          target: csenv-for-test-litespeed-general
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-litespeed-general-latest
          cache-from: type=gha

  push_csenv-for-test-litespeed-circleci:
    name: Push csenv:test-litespeed-circleci-latest (csenv-for-test-litespeed-circleci)
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          target: csenv-for-test-litespeed-circleci
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-litespeed-circleci-latest
          cache-from: type=gha

  push_csenv-for-test-apache-general:
    name: Push csenv:test-apache-general-latest (csenv-for-test-apache-general)
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          target: csenv-for-test-apache-general
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-apache-general-latest
          cache-from: type=gha
