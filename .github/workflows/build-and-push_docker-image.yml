name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [chrome-update]
  workflow_dispatch:
    inputs:
      force-build-csenv:
        description: "Force build of csenv [true/false]"
        required: true
        default: false
        type: boolean

jobs:
  csenv:
    name: Build and Push csenv:latest (csenv)
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Restore cpanfile File Hash at Last Build
        id: restore-last-cpanfile-hash
        uses: actions/cache@v2
        with:
          path: ~/cpanfile_hash
          key: cpanfile_hash

      - name: Create Directory to Store Hash if cache missing
        if: steps.restore-last-cpanfile-hash.outputs.cache-hit != 'true'
        run: mkdir -p ~/cpanfile_hash && touch ~/cpanfile_hash/last

      - name: Compare cpanfile Hash
        id: compare-cpanfile-hash
        run: |
          current_hash="$(sha512sum ./perl/cpanfile | awk '{print $1}')"
          echo "::set-output name=current-hash::${current_hash}"

          last_hash="$(cat ~/cpanfile_hash/last)"

          if [[ "${current_hash}" == "${last_hash}" ]]; then
            need_build="false"
          else
            need_build="true"
          fi
          echo "::set-output name=need-build::${need_build}"

          echo "*** Hash Compare Status for ./perl/cpanfile ***"
          echo "Current: ${current_hash}"
          echo "Last: ${last_hash}"
          echo "Need Build: ${need_build}"

      - name: Login to Docker Hub
        if: steps.compare-cpanfile-hash.outputs.need-build == 'true' || github.event.inputs.force-build-csenv
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        if: steps.compare-cpanfile-hash.outputs.need-build == 'true' || github.event.inputs.force-build-csenv
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Image to Docker Hub
        id: build-and-push-image
        if: steps.compare-cpanfile-hash.outputs.need-build == 'true' || github.event.inputs.force-build-csenv
        uses: docker/build-push-action@v2
        with:
          file: ./csenv.Dockerfile
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:latest
          cache-from: type=gha
          cache-to: type=gha

      - name: Store cpanfile File Hash
        if: steps.build-and-push-image.conclusion == 'success'
        run: echo -n '${{ steps.compare-cpanfile-hash.outputs.current-hash }}' > ~/cpanfile_hash/last

      - name: Trigger Downstream (docker-csenv-for-dev) Image Build
        if: steps.build-and-push-image.conclusion == 'success'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: mossuru777/docker-csenv-for-dev
          event-type: upstream-update

  fetch-chrome-latest-version:
    name: Fetch Chrome Latest Version
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.fetcher.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Fetch Chrome Latest Version
        id: fetcher
        uses: ./.github/actions/fetch-chrome-lastest-version

  base_csenv-for-test:
    name: Base Image Build (base_csenv-for-test)
    needs:
      - csenv
      - fetch-chrome-latest-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: base_csenv-for-test
          push: false
          cache-from: type=gha
          cache-to: type=gha

  base_csenv-for-test-litespeed:
    name: Base Image Build (base_csenv-for-test-litespeed)
    needs: base_csenv-for-test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: base_csenv-for-test-litespeed
          push: false
          cache-from: type=gha
          cache-to: type=gha

  csenv-for-test-litespeed-general:
    name: Build and Push csenv:test-litespeed-general-latest (csenv-for-test-litespeed-general)
    needs:
      - base_csenv-for-test-litespeed
      - fetch-chrome-latest-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: csenv-for-test-litespeed-general
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-litespeed-general-latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-litespeed-general-${{ needs.fetch-chrome-latest-version.outputs.version }}
          cache-from: type=gha

  csenv-for-test-litespeed-circleci:
    name: Build and Push csenv:test-litespeed-circleci-latest (csenv-for-test-litespeed-circleci)
    needs:
      - base_csenv-for-test-litespeed
      - fetch-chrome-latest-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: csenv-for-test-litespeed-circleci
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-litespeed-circleci-latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-litespeed-circleci-${{ needs.fetch-chrome-latest-version.outputs.version }}
          cache-from: type=gha

  base_csenv-for-test-apache:
    name: Base Image Build (base_csenv-for-test-apache)
    needs: base_csenv-for-test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: base_csenv-for-test-apache
          push: false
          cache-from: type=gha
          cache-to: type=gha

  csenv-for-test-apache-general:
    name: Build and Push csenv:test-apache-general-latest (csenv-for-test-apache-general)
    needs:
      - base_csenv-for-test-apache
      - fetch-chrome-latest-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: csenv-for-test-apache-general
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-apache-general-latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-apache-general-${{ needs.fetch-chrome-latest-version.outputs.version }}
          cache-from: type=gha

  csenv-for-test-apache-circleci:
    name: Build and Push csenv:test-apache-circleci-latest (csenv-for-test-apache-circleci)
    needs:
      - base_csenv-for-test-apache
      - fetch-chrome-latest-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          file: ./csenv-for-test.Dockerfile
          context: .
          target: csenv-for-test-apache-circleci
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-apache-circleci-latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/csenv:test-apache-circleci-${{ needs.fetch-chrome-latest-version.outputs.version }}
          cache-from: type=gha

  cache-build-chrome-version:
    name: Cache Build Chrome Version
    needs:
      - fetch-chrome-latest-version
      - csenv-for-test-litespeed-general
      - csenv-for-test-litespeed-circleci
      - csenv-for-test-apache-general
      - csenv-for-test-apache-circleci
    runs-on: ubuntu-20.04
    steps:
      - name: Get UnixTime
        id: get-unixtime
        run: echo "::set-output name=unixtime::$(/bin/date "+%s")"
        shell: bash

      - name: Setup cache Action
        uses: actions/cache@v2
        with:
          path: ~/version
          key: version-${{ steps.get-unixtime.outputs.unixtime }}

      - name: Store Build Chrome Version To Cache
        run: |
          mkdir -p ~/version
          echo -n '${{ needs.fetch-chrome-latest-version.outputs.version }}' > ~/version/last
        shell: bash
